# Dir navigation
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias ~='cd ~'
alias ll='tree --dirsfirst -ChFupDaL 1'

# Utilities
alias a="ack -ia"
alias b="bundle exec"
alias c="pygmentize -O style=monokai -f console256 -g"
alias d="du -h -d=1"
alias df="df -h"
alias g="git"
alias grep='GREP_COLOR="1;37;45" LANG=C grep --color=auto'
alias h="history"
alias httpdump="sudo tcpdump -i en1 -n -s 0 -w - | grep -a -o -E \"Host\: .*|GET \/.*\""
alias ip="curl -s http://checkip.dyndns.com/ | sed 's/[^0-9\.]//g'"
alias localip="ipconfig getifaddr en1"
alias mp="mvim -p"
alias rkt="racket -il xrepl"
alias tmux="tmux -2"
alias view="vim -p -R"
alias vp="vim -p"

# J = Z
alias j="z"

# rsync
alias r="rsync -avuzbP --exclude '*~'"

# t
alias todo="subl ~/Dropbox/todo.txt"
alias apfm="subl ~/Dropbox/APFM/todo.txt"
alias t="todo.sh"
alias ts='t | grep -v LongTerm'
# Enable alias completion
complete -F _todo t

# Forge
alias forge="/Applications/TriggerToolkit.app/Contents/MacOS/forge"

### NOTICES ###
# Notice title
notice() { echo -e "\033[1;32m=> $1\033[0m"; }
# Notice title
msg() { echo -e "\033[1;34m=> $1\033[0m"; }
# Error title
error() { echo -e "\033[1;31m=> Error: $1\033[0m"; }
# List item
c_list() { echo -e "  \033[1;32m✔\033[0m $1"; }
# Error list item
e_list() { echo -e "  \033[1;31m✖\033[0m $1"; }


# Git Repos
alias gmm="git checkout master; git merge staging; git push; git checkout -"
function gg() {
  if [ $# -gt 0 ]; then
    for i in $(echo $*); do
      if [ -d ${i}/.git ]; then
        ( msg "Pulling ${i}" && cd ${i} && git pull | grep -v "Already up-to-date." )
        ( cd ${i} && git status -s )
      fi
    done
  else
    echo "usage: gg <git repo dir>"
  fi
}

function gs() {
  if [ $# -gt 0 ]; then
    for i in $(echo $*); do
      if [ -d ${i}/.git ]; then
        ( msg "Status ${i}" && cd ${i}; git cherry -v origin/master | wc -l | grep -v ' 0'; git status -s )
      fi
    done
  else
    echo "usage: gst <git repo dir>"
  fi
}

function gz() {
  if [ $# -gt 0 ]; then
    for i in $(echo $*); do
      if [ -d ${i} ]; then
        ( msg "Tarring into ~/sandbox/backups/${i%/}.$(date "+%Y-%m-%d-%H-%M-%S").tgz" && tar zcf ~/sandbox/backups/${i%/}.$(date "+%Y-%m-%d-%H-%M-%S").tgz ${i%/} )
      fi
    done
  else
    echo "usage: gz <dir name>"
  fi
}

# clones a repository, cds into it, and opens it in my editor.
# - arg 1 - url|username|repo remote endpoint, username on github, or name of
#           repository.
# - arg 2 - (optional) name of repo
#
# usage:
#   $ clone things
#     .. git clone https://github.com/stephenplusplus/things.git things
#     .. cd things
#     .. subl .
#
#   $ clone https://github.com/stephenplusplus/dots.git
#     .. git clone https://github.com/stephenplusplus/dots.git dots
#     .. cd dots
#     .. subl .
#
#   $ clone yeoman generator
#     .. git clone https://github.com/yeoman/generator.git generator
#     .. cd generator
#     .. subl .
function clone {
  local url=$1;
  local repo=$2;

  if [[ ${url:0:4} == 'http' || ${url:0:3} == 'git' ]]
  then
    # just clone this thing.
    repo=$(echo $url | awk -F/ '{print $NF}' | sed -e 's/.git$//');
  elif [[ -z $repo ]]
  then
    # my own stuff.
    repo=$url;
    url="https://github.com/tomfuertes/$repo";
  else
    # not my own, but I know whose it is.
    url="https://github.com/$url/$repo.git";
  fi

  git clone $url $repo && cd $repo;
}

### http://chrisawren.com/posts/Advanced-Grunt-tooling ###
# Install a grunt plugin and save to devDependencies
function gi() {
  npm install --save-dev grunt-"$@"
}

# Install a grunt-contrib plugin and save to devDependencies
function gci() {
  npm install --save-dev grunt-contrib-"$@"
}
### /http://chrisawren.com/posts/Advanced-Grunt-tooling ###

# function ascifix() {
#   find . -type f | xargs perl -pi -e 's/\“/\"/g';
#   find . -type f | xargs perl -pi -e 's/\”/\"/g';
#   find . -type f | xargs perl -pi -e "s/\’/\'/g";
# }

alias pss="open http://localhost:8080 && python -m SimpleHTTPServer 8080"
alias spss="open http://www.example.com && sudo python -m SimpleHTTPServer 80"

alias dup=". ~/.dotfiles/bootstrap.sh"
alias gemup="gem update --system && rvm get stable"
alias brup="brew update && brew upgrade && brew prune && brew cleanup"
alias nup="npm update -g --quiet"
# alias sup="svn up ~/sandbox/svn-repos/*; svn status ~/sandbox/svn-repos/*"
alias gup="gg ~/sandbox/git-repos/*"
alias pup="pip freeze --local | grep -v '^\-e' | cut -d = -f 1  | xargs pip install -U"
alias up="\
  notice '~/sandbox/git-repos/* Update'; \
  gup; \
  notice 'Brew Update'; \
  brup; \
  notice 'NPM Update'; \
  nup; \
  notice 'Gem Update'; \
  gemup; \
  notice 'Pip Update'; \
  pup; \
  notice '~/.dotfiles Update'; \
  dup; \
"
alias gst="gs ~/sandbox/git-repos/*"
alias clean='find . -name "*.pyc" -delete; find . -name ".DS_Store" -delete; if [ -d .git ]; then git clean -fdx -- tmp; fi;'
# rec: https://github.com/colorhook/node-smushit
# alias smush='python ~/sandbox/git-repos/smush.py/smush/smush.py -r -s'

alias resetaudio='sudo killall coreaudiod'
alias killrails="kill $(ps aux | grep '[r]ails' | awk '{print $2}')"

alias c="clear"


